set(TARGET_PYLIB pybemo)
set(TARGET_CORELIB corebemo)
set(TARGET_UI appbemo)
set(BMO_LOGGING_ENABLED true)

include_directories(.)

file(GLOB_RECURSE LIBBEMO_SOURCES BCore/*.cc)
file(GLOB_RECURSE LIBBEMO_HEADERS BCore/*.hh)
file(GLOB_RECURSE PYBEMO_SOURCES BPy/*.cc)
file(GLOB_RECURSE PYBEMO_HEADERS BPy/*.hh)
file(GLOB_RECURSE UIBEMO_SOURCES BUI/*.cc)
file(GLOB_RECURSE UIBEMO_HEADERS BUI/*.hh)

add_library(${TARGET_CORELIB} SHARED ${LIBBEMO_SOURCES} ${LIBBEMO_HEADERS})
target_compile_definitions(${TARGET_CORELIB} PUBLIC BMO_LOGGING_ENABLED=${BMO_LOGGING_ENABLED})

pybind11_add_module(${TARGET_PYLIB} ${PYBEMO_SOURCES} ${PYBEMO_HEADERS})
target_link_libraries(${TARGET_PYLIB} PRIVATE ${TARGET_CORELIB})

add_custom_command(TARGET ${TARGET_PYLIB} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${TARGET_PYLIB}> ${PYTHON_DIST_DIR})

add_custom_command(TARGET ${TARGET_CORELIB}  POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${TARGET_CORELIB}> ${PYTHON_DIST_DIR})

## Qt5
#set(CMAKE_PREFIX_PATH $ENV{HOME}/Qt/5.7/clang_64/lib/cmake ${CMAKE_PREFIX_PATH} )
#set(CMAKE_AUTOMOC ON)
#
#find_package(Qt5Widgets REQUIRED)
#
#add_executable(${TARGET_UI} ${UIBEMO_SOURCES})
#target_link_libraries(${TARGET_UI} PRIVATE
#        ${TARGET_CORELIB} pybind11::embed Qt5::Widgets)
#
#add_dependencies(${TARGET_UI} ${TARGET_PYLIB} ${TARGET_CORELIB})